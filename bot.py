from aiogram import Dispatcher, Bot, F
from aiogram.filters import CommandStart
from aiogram.types import (KeyboardButton, Message, ReplyKeyboardMarkup)
from constants import *
import requests

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

cat_response: requests.Response
cat_link: str
offset = -2

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –∫–Ω–æ–ø–æ–∫
button_1 = KeyboardButton(text='–•–æ—á—É –∫–æ—Ç–∏–∫–∞ (–Ω–µ ü¶Æ)')
button_2 = KeyboardButton(text='—è –æ–≥—É—Ä–µ—Ü ü•í')

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –¥–æ–±–∞–≤–ª—è—è –≤ –Ω–µ–≥–æ –∫–Ω–æ–ø–∫–∏
keyboard = ReplyKeyboardMarkup(keyboard=[[button_1, button_2]])

@dp.message(CommandStart())
async def process_start_command(message: Message):
    await message.answer(
        text='–ß–µ–≥–æ —Ç—ã —Ö–æ—á–µ—à—å?',
        reply_markup=keyboard
    )

@dp.message(F.text == '–•–æ—á—É –∫–æ—Ç–∏–∫–∞ (–Ω–µ ü¶Æ)')
async def process_dog_answer(message: Message):
    await message.answer(
        text='–î–µ—Ä–∂–∏ –∫–æ—Ç–∏–∫–∞:'
    )
    cat_response = requests.get(API_CATS_URL)
    cat_link = cat_response.json()[0]['url']
    print(cat_link)
    requests.get(f'{API_URL}{BOT_TOKEN}/sendPhoto?chat_id={message.chat.id}&photo={cat_link}')

@dp.message(F.text == '—è –æ–≥—É—Ä–µ—Ü ü•í')
async def process_cucumber_answer(message: Message):
    await message.answer(
        text='—Ç–µ–±–µ –≤–∏–¥–Ω–µ–µ. –ù–æ –ª—É—á—à–µ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ t.me/ITMO_stud'
    )
@dp.message()
async def echo_handler(message: Message) -> None:
    try:
        await message.send_copy(chat_id=message.chat.id)
        print(message.chat.full_name, "sending '", message.text, "'")
    except TypeError:
        await message.answer("–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ª–æ–º–∞–µ—Ç –±–æ—Ç–∞(")
if __name__ == '__main__':
    dp.run_polling(bot)